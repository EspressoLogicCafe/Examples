[
  {
    "name": "account",
    "description": "Account to use for login",
    "kind": "parameter",
    "datatype": "password",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "security",
    "javaType": "java.lang.String",
    "isSecret": true,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "activePortRange",
    "description": "Set the client side port range in active mode. The syntax is: minPort-maxPort Both port numbers are inclusive eg 10000-19999 to include all 1xxxx ports.",
    "kind": "parameter",
    "datatype": "string",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "java.lang.String",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "allowNullBody",
    "description": "Used to specify if a null body is allowed during file writing. If set to true then an empty file will be created when set to false and attempting to send a null body to the file component a GenericFileWriteException of 'Cannot write null body to file.' will be thrown. If the fileExist option is set to 'Override' then the file will be truncated and if set to append the file will remain unchanged.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "producer (advanced)",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "autoCreate",
    "description": "Automatically create missing directories in the file's pathname. For the file consumer that means creating the starting directory. For the file producer it means the directory the files should be written to.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "binary",
    "description": "Specifies the file transfer mode BINARY or ASCII. Default is ASCII (false).",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "common",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "bufferSize",
    "description": "Write buffer sized in bytes.",
    "kind": "parameter",
    "datatype": "integer",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "int",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "charset",
    "description": "This option is used to specify the encoding of the file. You can use this on the consumer to specify the encodings of the files which allow Camel to know the charset it should load the file content in case the file content is being accessed. Likewise when writing a file you can use this option to specify which charset to write the file as well. Do mind that when writing the file Camel may have to read the message content into memory to be able to convert the data into the configured charset so do not use this if you have big messages.",
    "kind": "parameter",
    "datatype": "string",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "common",
    "javaType": "java.lang.String",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "chmod",
    "description": "Allows you to set chmod on the stored file. For example chmod=640.",
    "kind": "parameter",
    "datatype": "string",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "producer (advanced)",
    "javaType": "java.lang.String",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "connectTimeout",
    "description": "Sets the connect timeout for waiting for a connection to be established Used by both FTPClient and JSCH",
    "kind": "parameter",
    "datatype": "integer",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "int",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "directoryName",
    "description": "The starting directory",
    "kind": "path",
    "datatype": "string",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "common",
    "javaType": "java.lang.String",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "disconnect",
    "description": "Whether or not to disconnect from remote FTP server right after use. Disconnect will only disconnect the current connection to the FTP server. If you have a consumer which you want to stop then you need to stop the consumer/route instead.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "common",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "disconnectOnBatchComplete",
    "description": "Whether or not to disconnect from remote FTP server right after a Batch upload is complete. disconnectOnBatchComplete will only disconnect the current connection to the FTP server.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "producer (advanced)",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "doneFileName",
    "description": "Producer: If provided then Camel will write a 2nd done file when the original file has been written. The done file will be empty. This option configures what file name to use. Either you can specify a fixed name. Or you can use dynamic placeholders. The done file will always be written in the same folder as the original file. Consumer: If provided Camel will only consume files if a done file exists. This option configures what file name to use. Either you can specify a fixed name. Or you can use dynamic placeholders.The done file is always expected in the same folder as the original file. Only $file.name and $file.name.noext is supported as dynamic placeholders.",
    "kind": "parameter",
    "datatype": "string",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "common",
    "javaType": "java.lang.String",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "eagerDeleteTargetFile",
    "description": "Whether or not to eagerly delete any existing target file. This option only applies when you use fileExists=Override and the tempFileName option as well. You can use this to disable (set it to false) deleting the target file before the temp file is written. For example you may write big files and want the target file to exists during the temp file is being written. This ensure the target file is only deleted until the very last moment just before the temp file is being renamed to the target filename. This option is also used to control whether to delete any existing files when fileExist=Move is enabled and an existing file exists. If this option copyAndDeleteOnRenameFails false then an exception will be thrown if an existing file existed if its true then the existing file is deleted before the move operation.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "producer (advanced)",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "fastExistsCheck",
    "description": "If set this option to be true camel-ftp will use the list file directly to check if the file exists. Since some FTP server may not support to list the file directly if the option is false camel-ftp will use the old way to list the directory and check if the file exists. This option also influences readLock=changed to control whether it performs a fast check to update file information or not. This can be used to speed up the process if the FTP server has a lot of files.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "common (advanced)",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "fileExist",
    "description": "What to do if a file already exists with the same name. Override which is the default replaces the existing file. Append - adds content to the existing file. Fail - throws a GenericFileOperationException indicating that there is already an existing file. Ignore - silently ignores the problem and does not override the existing file but assumes everything is okay. Move - option requires to use the moveExisting option to be configured as well. The option eagerDeleteTargetFile can be used to control what to do if an moving the file and there exists already an existing file otherwise causing the move operation to fail. The Move option will move any existing files before writing the target file. TryRename is only applicable if tempFileName option is in use. This allows to try renaming the file from the temporary name to the actual name without doing any exists check. This check may be faster on some file systems and especially FTP servers.",
    "kind": "parameter",
    "datatype": "object",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "producer",
    "javaType": "org.apache.camel.component.file.GenericFileExist",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "fileName",
    "description": "Use Expression such as File Language to dynamically set the filename. For consumers it's used as a filename filter. For producers it's used to evaluate the filename to write. If an expression is set it take precedence over the CamelFileName header. (Note: The header itself can also be an Expression). The expression options support both String and Expression types. If the expression is a String type it is always evaluated using the File Language. If the expression is an Expression type the specified Expression type is used - this allows you for instance to use OGNL expressions. For the consumer you can use it to filter filenames so you can for instance consume today's file using the File Language syntax: mydata-$date:now:yyyyMMdd.txt. The producers support the CamelOverruleFileName header which takes precedence over any existing CamelFileName header; the CamelOverruleFileName is a header that is used only once and makes it easier as this avoids to temporary store CamelFileName and have to restore it afterwards.",
    "kind": "parameter",
    "datatype": "string",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "common",
    "javaType": "java.lang.String",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "flatten",
    "description": "Flatten is used to flatten the file name path to strip any leading paths so it's just the file name. This allows you to consume recursively into sub-directories but when you eg write the files to another directory they will be written in a single directory. Setting this to true on the producer enforces that any file name in CamelFileName header will be stripped for any leading paths.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "producer",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "ftpClient",
    "description": "To use a custom instance of FTPClient",
    "kind": "parameter",
    "datatype": "object",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "org.apache.commons.net.ftp.FTPClient",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "ftpClientConfig",
    "description": "To use a custom instance of FTPClientConfig to configure the FTP client the endpoint should use.",
    "kind": "parameter",
    "datatype": "object",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "org.apache.commons.net.ftp.FTPClientConfig",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "ftpClientConfigParameters",
    "description": "Used by FtpComponent to provide additional parameters for the FTPClientConfig",
    "kind": "parameter",
    "datatype": "object",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "java.util.Map<java.lang.String,java.lang.Object>",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "ftpClientParameters",
    "description": "Used by FtpComponent to provide additional parameters for the FTPClient",
    "kind": "parameter",
    "datatype": "object",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "java.util.Map<java.lang.String,java.lang.Object>",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "greedy",
    "description": "If greedy is enabled then the ScheduledPollConsumer will run immediately again if the previous run polled 1 or more messages.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "scheduler",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "host",
    "description": "Hostname of the FTP server",
    "kind": "path",
    "datatype": "string",
    "isRequired": true,
    "isMultipleOk": false,
    "group": "common",
    "javaType": "java.lang.String",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "keepLastModified",
    "description": "Will keep the last modified timestamp from the source file (if any). Will use the Exchange.FILE_LAST_MODIFIED header to located the timestamp. This header can contain either a java.util.Date or long with the timestamp. If the timestamp exists and the option is enabled it will set this timestamp on the written file. Note: This option only applies to the file producer. You cannot use this option with any of the ftp producers.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "producer (advanced)",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "maximumReconnectAttempts",
    "description": "Specifies the maximum reconnect attempts Camel performs when it tries to connect to the remote FTP server. Use 0 to disable this behavior.",
    "kind": "parameter",
    "datatype": "integer",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "int",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "moveExisting",
    "description": "Expression (such as File Language) used to compute file name to use when fileExist=Move is configured. To move files into a backup subdirectory just enter backup. This option only supports the following File Language tokens: file:name file:name.ext file:name.noext file:onlyname file:onlyname.noext file:ext and file:parent. Notice the file:parent is not supported by the FTP component as the FTP component can only move any existing files to a relative directory based on current dir as base.",
    "kind": "parameter",
    "datatype": "string",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "producer",
    "javaType": "java.lang.String",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "passiveMode",
    "description": "Sets passive mode connections. Default is active mode connections.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "common",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "password",
    "description": "Password to use for login",
    "kind": "parameter",
    "datatype": "password",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "security",
    "javaType": "java.lang.String",
    "isSecret": true,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "port",
    "description": "Port of the FTP server",
    "kind": "path",
    "datatype": "integer",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "common",
    "javaType": "int",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "reconnectDelay",
    "description": "Delay in millis Camel will wait before performing a reconnect attempt.",
    "kind": "parameter",
    "datatype": "integer",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "long",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "runLoggingLevel",
    "description": "The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",
    "kind": "parameter",
    "datatype": "object",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "scheduler",
    "javaType": "org.apache.camel.LoggingLevel",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "scheduledExecutorService",
    "description": "Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",
    "kind": "parameter",
    "datatype": "object",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "scheduler",
    "javaType": "java.util.concurrent.ScheduledExecutorService",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "schedulerProperties",
    "description": "To configure additional properties when using a custom scheduler or any of the Quartz2 Spring based scheduler.",
    "kind": "parameter",
    "datatype": "object",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "scheduler",
    "javaType": "java.util.Map<java.lang.String,java.lang.Object>",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "sendNoop",
    "description": "Whether to send a noop command as a pre-write check before uploading files to the FTP server. This is enabled by default as a validation of the connection is still valid which allows to silently re-connect to be able to upload the file. However if this causes problems you can turn this option off.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "producer (advanced)",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "separator",
    "description": "Sets the path separator to be used. UNIX = Uses unix style path separator Windows = Uses windows style path separator Auto = (is default) Use existing path separator in file name",
    "kind": "parameter",
    "datatype": "object",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "common",
    "javaType": "org.apache.camel.component.file.remote.RemoteFileConfiguration.PathSeparator",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "siteCommand",
    "description": "Sets optional site command(s) to be executed after successful login. Multiple site commands can be separated using a new line character.",
    "kind": "parameter",
    "datatype": "string",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "java.lang.String",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "soTimeout",
    "description": "Sets the so timeout Used only by FTPClient",
    "kind": "parameter",
    "datatype": "integer",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "int",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "stepwise",
    "description": "Sets whether we should stepwise change directories while traversing file structures when downloading files or as well when uploading a file to a directory. You can disable this if you for example are in a situation where you cannot change directory on the FTP server due security reasons.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "synchronous",
    "description": "Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported).",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "tempFileName",
    "description": "The same as tempPrefix option but offering a more fine grained control on the naming of the temporary filename as it uses the File Language.",
    "kind": "parameter",
    "datatype": "string",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "producer",
    "javaType": "java.lang.String",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "tempPrefix",
    "description": "This option is used to write the file using a temporary name and then after the write is complete rename it to the real name. Can be used to identify files being written and also avoid consumers (not using exclusive read locks) reading in progress files. Is often used by FTP when uploading big files.",
    "kind": "parameter",
    "datatype": "string",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "producer",
    "javaType": "java.lang.String",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "throwExceptionOnConnectFailed",
    "description": "Should an exception be thrown if connection failed (exhausted) By default exception is not thrown and a WARN is logged. You can use this to enable exception being thrown and handle the thrown exception from the org.apache.camel.spi.PollingConsumerPollStrategy rollback method.",
    "kind": "parameter",
    "datatype": "boolean",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "boolean",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "timeout",
    "description": "Sets the data timeout for waiting for reply Used only by FTPClient",
    "kind": "parameter",
    "datatype": "integer",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "advanced",
    "javaType": "int",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  },
  {
    "name": "username",
    "description": "Username to use for login",
    "kind": "parameter",
    "datatype": "string",
    "isRequired": false,
    "isMultipleOk": false,
    "group": "security",
    "javaType": "java.lang.String",
    "isSecret": false,
    "defaultValue": null,
    "isDeprecated": false
  }
]
